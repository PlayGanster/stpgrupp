// app/api/callback/route.ts
export async function POST(request: Request) {
  const { phone, city, cityName, productName, type, page } = await request.json()

  const TELEGRAM_BOT_TOKEN = "7647075796:AAEsiMeMRdXpWb0xRqVdGs0Nlh1KDUfKcZE"
  const TELEGRAM_CHAT_ID = "-4948988069"

  let message = ''

  if (type === 'callback') {
    message = `üìû *–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫*

üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}
üèôÔ∏è *–ì–æ—Ä–æ–¥:* ${cityName} (${city})
üíª*–°—Ç—Ä–∞–Ω–∏—Ü–∞:* ${page}
${productName ? `üõ†Ô∏è *–¢–µ—Ö–Ω–∏–∫–∞:* ${productName}\n` : ''}
‚è∞ *–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:* ${new Date().toLocaleString('ru-RU')}

_–°—Ä–æ—á–Ω–æ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç!_`
  } else {
    message = `üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é*

üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}
üèôÔ∏è *–ì–æ—Ä–æ–¥:* ${cityName} (${city})
üíª*–°—Ç—Ä–∞–Ω–∏—Ü–∞:* ${page}
${productName ? `üõ†Ô∏è *–¢–µ—Ö–Ω–∏–∫–∞:* ${productName}\n` : ''}
‚è∞ *–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:* ${new Date().toLocaleString('ru-RU')}

_–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç!_`
  }

  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown'
      })
    })

    const data = await response.json()

    if (data.ok) {
      return new Response(JSON.stringify({ success: true }), {
        status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
    } else {
      return new Response(JSON.stringify({ success: false, error: data.description }), {
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      })
    }
  } catch (error) {
    return new Response(JSON.stringify({ success: false, error: 'Network error' }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    })
  }
}